---

# Stole from github.com/ansible/workshops
#
# equivalent of curl https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token -d grant_type=refresh_token -d client_id=rhsm-api -d refresh_token=$offline_token

- name: check if aap.tar.gz already has been downloaded
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/aap.tar.gz"
    checksum_algorithm: sha256
  register: stat_var
  run_once: true

- name: generate access token
  ansible.builtin.uri:
    url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
    method: POST
    body_format: form-urlencoded
    return_content: true
    body:
      grant_type: "refresh_token"
      client_id: "rhsm-api"
      refresh_token: "{{ offline_token }}"
  register: temp_token
  when: not stat_var.stat.exists
  run_once: true

- name: retrieve download link via sha_value
  ansible.builtin.uri:
    url: https://api.access.redhat.com/management/v1/images/{{ provided_sha_value }}/download
    headers:
      accept: "application/json"
      Authorization: "Bearer {{ temp_token.json.access_token }}"
    method: GET
  register: download_url
  when: not stat_var.stat.exists
  run_once: true

- name: show download url
  ansible.builtin.debug:
    var: download_url.url
  when: not stat_var.stat.exists

- name: download aap.tar.gz
  ansible.builtin.get_url:
    url: "{{ download_url.url }}"
    dest: "{{ ansible_user_dir }}/aap.tar.gz"
    checksum: "sha256: {{ provided_sha_value }}"
  when: not stat_var.stat.exists
